plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.appdistribution'
}

def localProperties = new Properties()
def localFile = rootProject.file("local.properties");
if (localFile.exists()) {
    localProperties.load(new FileInputStream(localFile))
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "olmo.wellness.android"
        minSdk 23
        targetSdk 32
        versionCode 51
        versionName "1.0.40"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        signingConfig signingConfigs.debug
    }

    signingConfigs {
        release {
            keyAlias 'keplerReleaseKey'
            keyPassword 'kepler'
            storeFile file('../keystore/keplerReleaseKey')
            storePassword 'kepler'
        }
    }

    buildTypes {
        local {
            buildConfigField 'String', 'ID_SERVER_URL', localProperties.getProperty('ID_SERVER_LOCAL', ID_SERVER_DEV)
            buildConfigField 'String', 'SERVER_API_URL', localProperties.getProperty('SERVER_URL_LOCAL', SERVER_URL_DEV)
            buildConfigField 'String', 'SOCKET_API_URL', localProperties.getProperty('SOCKET_URL_LOCAL', SOCKET_URL_DEV)
            debuggable true
        }
        debug {
            buildConfigField 'String', 'ID_SERVER_URL', ID_SERVER_DEV
            buildConfigField 'String', 'SERVER_API_URL', SERVER_URL_DEV
            buildConfigField 'String', 'SOCKET_API_URL', SOCKET_URL_DEV
            debuggable true
        }
        staging {
            buildConfigField 'String', 'ID_SERVER_URL', ID_SERVER_DEV
            buildConfigField 'String', 'SERVER_API_URL', SERVER_URL_DEV
            buildConfigField 'String', 'SOCKET_API_URL', SOCKET_URL_DEV
        }
        release {
            buildConfigField 'String', 'ID_SERVER_URL', ID_SERVER_PRO
            buildConfigField 'String', 'SERVER_API_URL', SERVER_URL_PRO
            buildConfigField 'String', 'SOCKET_API_URL', SOCKET_URL_PRO
            buildConfigField 'String', 'CHAT_SERVER_URL_PRO', CHAT_SERVER_URL_PRO
            buildConfigField 'String', 'UPLOAD_URL_PRO', UPLOAD_URL_PRO
            minifyEnabled false // TODO
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.2.0-rc02"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    //-- core
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'com.google.accompanist:accompanist-permissions:0.21.1-beta'
    implementation 'androidx.paging:paging-compose:1.0.0-alpha15'

    // compose
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha08"
    implementation "com.google.accompanist:accompanist-flowlayout:0.17.0"
    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:lifecycle"
    // hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0-alpha03"
    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit2"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3"
    // refresh view
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    implementation "com.google.accompanist:accompanist-insets-ui:$accompanist_version"

    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    // load image
    implementation("io.coil-kt:coil-compose:1.4.0")
    // room db
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor("androidx.room:room-compiler:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    // Splash screen Api
    implementation("androidx.core:core-splashscreen:1.0.0-beta01")

    // Google Service
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.4.0')
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation  "com.google.android.gms:play-services-auth-api-phone:18.0.1"
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //-- amazon ivs
    implementation 'com.amazonaws:ivs-broadcast:1.5.0'
    implementation 'com.google.android.exoplayer:exoplayer:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-smoothstreaming:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.18.1'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.1'
    implementation 'com.google.android.exoplayer:extension-okhttp:2.18.1'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.6.0'

    implementation("androidx.activity:activity-ktx:$activity_version")

    //-- compose material3
    implementation "androidx.compose.material3:material3:$compose_material3"
    implementation "androidx.compose.material3:material3-window-size-class:$compose_material3"

    /* CameraX */
    /*
    compose_version = '1.0.2'
    camerax_version = '1.0.1'
    */
    implementation "androidx.camera:camera-camera2:1.0.2"
    implementation "androidx.camera:camera-lifecycle:1.0.2"
    implementation "androidx.camera:camera-view:1.0.0-alpha28"
    implementation "com.google.accompanist:accompanist-permissions:0.18.0"
    implementation "androidx.compose.ui:ui-tooling-preview:1.0.2"

    implementation "com.google.accompanist:accompanist-pager:0.25.1"

    testImplementation 'junit:junit:4.+'
    testImplementation "org.mockito:mockito-core:+"
    androidTestImplementation "org.mockito:mockito-android:+"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'
    //Constrain layout
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha02"
    //Load image url
    implementation("io.coil-kt:coil-compose:2.1.0")
    implementation("io.coil-kt:coil-svg:2.1.0")

    implementation "com.google.accompanist:accompanist-flowlayout:0.22.0-rc"

    //WebRTC
    implementation 'org.webrtc:google-webrtc:1.0.32006'
    implementation "io.arrow-kt:arrow-core:1.0.1"

    implementation "com.airbnb.android:lottie-compose:4.2.0"
   //implementation "androidx.compose.animation:animation:1.1.1"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.23.1"
    implementation 'com.googlecode.libphonenumber:libphonenumber:7.2.2'
    // Facebook Login only
    implementation 'com.facebook.android:facebook-login:latest.release'
    implementation 'com.facebook.android:facebook-core:latest.release'
    // Facebook Share only
    implementation 'com.facebook.android:facebook-share:latest.release'

    implementation files('../libs/deepar.aar')
   // implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.21"
    implementation 'id.zelory:compressor:3.0.1'
}